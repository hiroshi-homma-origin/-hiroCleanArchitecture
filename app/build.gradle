plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.apollographql.apollo'
    id 'dagger.hilt.android.plugin'
    id 'com.google.firebase.crashlytics'
}
apply from: "${rootDir.absolutePath}/ktlint.gradle"

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.kotlin.cleanarchitecture"
        minSdkVersion 24
        targetSdkVersion 30
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    composeOptions {
        kotlinCompilerVersion kotlin_version
        kotlinCompilerExtensionVersion compose_version
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    buildFeatures {
        //noinspection DataBindingWithoutKapt
        compose = true
        dataBinding = true
        viewBinding = true
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    packagingOptions {
        exclude "**.proto" // apkからprotoファイルを取り除く
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    apollo {
        generateModelBuilder = true
        useSemanticNaming = true
    }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':domain')
    implementation project(':data')

    implementation 'androidx.appcompat:appcompat:1.3.0-beta01'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.activity:activity-ktx:1.2.0'
    implementation 'androidx.core:core-ktx:1.5.0-beta02'
    implementation "androidx.activity:activity-compose:1.3.0-alpha03"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams-ktx:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.3.0"

    // For Google Play Services
    implementation 'com.google.android.gms:play-services-base:17.6.0'
    implementation 'com.google.android.gms:play-services-ads-identifier:17.0.0'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation 'com.google.android.gms:play-services-analytics:17.0.0'

    // For Firebase
    implementation 'com.google.firebase:firebase-core:18.0.2'
    implementation 'com.google.firebase:firebase-analytics-ktx:18.0.2'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:17.3.1'
    implementation 'com.google.firebase:firebase-config:20.0.3'
    implementation 'com.google.firebase:firebase-iid:21.0.1'
    implementation 'com.google.firebase:firebase-messaging:21.0.1'

    // Hilt
    implementation "com.google.dagger:hilt-android:$google_hilt"
    kapt "com.google.dagger:hilt-android-compiler:$google_hilt"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$androidx_hilt"
    kapt "androidx.hilt:hilt-compiler:$androidx_hilt"

    // Jetpack Compose
    implementation "androidx.compose.compiler:compiler:$compose_version"
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.foundation:foundation-layout:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-text:$compose_version"
    implementation "androidx.compose.ui:ui-unit:$compose_version"
    implementation "androidx.compose.ui:ui-geometry:$compose_version"
    implementation "androidx.compose.ui:ui-viewbinding:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.animation:animation-core:$compose_version"
    implementation "androidx.compose.animation:animation:$compose_version"
    // still being refactoring
    androidTestImplementation "androidx.ui:ui-test:$compose_version"

    // Third Party Library
    implementation "com.jakewharton.timber:timber:4.7.1"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    // Don't Use (Expectations for the future)
//    implementation 'com.github.mvarnagiris:compose-glide-image:0.3.11'
    implementation "dev.chrisbanes.accompanist:accompanist-coil:0.6.0"

    debugImplementation "com.willowtreeapps.hyperion:hyperion-core:$hyperionVersion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-crash:$hyperionVersion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-geiger-counter:$hyperionVersion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-measurement:$hyperionVersion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-timber:$hyperionVersion"
}

kapt { generateStubs = true }

apply plugin: 'com.google.gms.google-services'

// tag::compiler-kotlin[]
def compiler = javaToolchains.compilerFor {
    languageVersion = JavaLanguageVersion.of(11)
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        // Treat all Kotlin warnings as errors
        allWarningsAsErrors = true
        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
        // Enable experimental coroutines APIs, including Flow
        freeCompilerArgs += '-Xopt-in=kotlin.Experimental'

        // Set JVM target to 1.8
        jvmTarget = "1.8"
    }
}