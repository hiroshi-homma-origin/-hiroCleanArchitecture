plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "String", "DOMAIN", "\"http://tk2-246-32569.vs.sakura.ne.jp/\""
            buildConfigField "Long", "API_READ_TIMEOUT", "120L"
            buildConfigField "Long", "API_CONNECT_TIMEOUT", "120L"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "DOMAIN", "\"http://tk2-246-32569.vs.sakura.ne.jp/\""
            buildConfigField "Long", "API_READ_TIMEOUT", "120L"
            buildConfigField "Long", "API_CONNECT_TIMEOUT", "120L"
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

configurations {
    ktlint
}

dependencies {
    implementation project(':data')

    // LiveData
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'

    // For Billing Service
    implementation "com.android.billingclient:billing:3.0.1"

    // For Google Play Services
    implementation 'com.google.android.gms:play-services-base:17.4.0'
    implementation 'com.google.android.gms:play-services-ads-identifier:17.0.0'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation 'com.google.android.gms:play-services-analytics:17.0.0'
    implementation "com.google.android.gms:play-services-gcm:17.0.0"

    // For Firebase
    implementation 'com.google.firebase:firebase-core:17.5.1'
    implementation 'com.google.firebase:firebase-analytics:17.6.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'
    implementation 'com.google.firebase:firebase-config:19.2.0'
    implementation 'com.google.firebase:firebase-iid:20.3.0'
    implementation 'com.google.firebase:firebase-messaging:20.3.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:$google_hilt"
    kapt "com.google.dagger:hilt-android-compiler:$google_hilt"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$androidx_hilt"
    kapt "androidx.hilt:hilt-compiler:$androidx_hilt"
    annotationProcessor "androidx.hilt:hilt-compiler:$androidx_hilt"

    // Network
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'
    implementation "com.squareup.okhttp3:okhttp:4.7.2"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"

    // Apollo (Pending Imp)
    implementation("com.apollographql.apollo:apollo-runtime:2.2.1")
    implementation("com.apollographql.apollo:apollo-normalized-cache-sqlite:2.2.1")
    implementation("com.apollographql.apollo:apollo-coroutines-support:2.2.1")
    implementation "com.apollographql.apollo:apollo-rx2-support:2.2.1"
    implementation("com.apollographql.apollo:apollo-api:2.2.1")

    // Kotlin Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:1.3.7"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.7"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-guava:$room_version"

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-gcm:$work_version"

    // optional - Test helpers

    // Third Party Library
    implementation "com.jakewharton.timber:timber:4.7.1"
    implementation "com.squareup.picasso:picasso:2.71828"
    implementation "com.github.bumptech.glide:glide:4.11.0"
    kapt "com.github.bumptech.glide:compiler:4.11.0"

    debugImplementation "com.willowtreeapps.hyperion:hyperion-core:$hyperionVersion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-crash:$hyperionVersion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-geiger-counter:$hyperionVersion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-measurement:$hyperionVersion"
    debugImplementation "com.willowtreeapps.hyperion:hyperion-timber:$hyperionVersion"

    // Test
    androidTestImplementation "junit:junit:4.13"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"

    // Ktlint
    ktlint "com.pinterest:ktlint:0.37.1"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}